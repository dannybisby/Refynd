version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: refynd
      POSTGRES_USER: refynd
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-refynd_dev}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - refynd-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U refynd"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for Bull Queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - refynd-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API (Fastify + Node.js)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://refynd:${POSTGRES_PASSWORD:-refynd_dev}@postgres:5432/refynd
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-dev_jwt_secret}
      - API_PORT=8000
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - refynd-network
    volumes:
      - ./backend/uploads:/app/uploads
    restart: unless-stopped

  # Background Job Worker
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: ["npm", "run", "worker"]
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://refynd:${POSTGRES_PASSWORD:-refynd_dev}@postgres:5432/refynd
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-dev_jwt_secret}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - refynd-network
    restart: unless-stopped

  # Frontend (Vue.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://localhost:8000
    networks:
      - refynd-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-available:/etc/nginx/sites-available
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - refynd-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  refynd-network:
    driver: bridge